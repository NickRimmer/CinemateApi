<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{455C7F27-7E4A-43CD-A31B-46C8C86CE123}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CinemateApi</RootNamespace>
    <AssemblyName>CinemateApi</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\CinemateApi.XML</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.7.0.1\lib\net40\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Cinemate.cs" />
    <Compile Include="Enums\HttpMethodEnum.cs" />
    <Compile Include="Enums\MovieEnumsConverter.cs" />
    <Compile Include="Enums\MovieOrderDirectionEnum.cs" />
    <Compile Include="Enums\MovieStateEnum.cs" />
    <Compile Include="Enums\MovieTypeEnum.cs" />
    <Compile Include="Enums\MovieViewModeEnum.cs" />
    <Compile Include="Enums\MovieOrderTargetEnum.cs" />
    <Compile Include="Enums\VoteValueEnum.cs" />
    <Compile Include="Methods\AccountMethods.cs" />
    <Compile Include="Methods\MovieMethods.cs" />
    <Compile Include="Methods\PersonMethods.cs" />
    <Compile Include="Methods\StatsMethods.cs" />
    <Compile Include="Models\CinimateProperties.cs" />
    <Compile Include="Models\Remote\AccountUpdateListItemModel.cs" />
    <Compile Include="Models\Remote\AccountVoteModel.cs" />
    <Compile Include="Models\Remote\Image2Model.cs" />
    <Compile Include="Models\Remote\ImageModel.cs" />
    <Compile Include="Models\Remote\AccountMovieBoxModel.cs" />
    <Compile Include="Models\Remote\MovieShort2Model.cs" />
    <Compile Include="Models\Remote\MovieInfoModel.cs" />
    <Compile Include="Models\Remote\MovieShortModel.cs" />
    <Compile Include="Models\Remote\NamesListModel.cs" />
    <Compile Include="Models\Remote\MoviePersonModel.cs" />
    <Compile Include="Models\Remote\MoviePersonsListModel.cs" />
    <Compile Include="Models\Remote\PersonModel.cs" />
    <Compile Include="Models\Remote\PersonMoviesModel.cs" />
    <Compile Include="Models\Remote\PersonWithMoviesModel.cs" />
    <Compile Include="Models\Remote\RatingModel.cs" />
    <Compile Include="Models\Remote\AccountUpdateObjectModel.cs" />
    <Compile Include="Models\Remote\UrlModel.cs" />
    <Compile Include="Models\Remote\AccountWatchModel.cs" />
    <Compile Include="Models\Response\AccountMovieBoxResponseModel.cs" />
    <Compile Include="Models\Response\AccountProfileResponseModel.cs" />
    <Compile Include="Models\Response\AccountResponseModel.cs" />
    <Compile Include="Models\Response\AccountUpdateListResponseModel.cs" />
    <Compile Include="Models\Response\AccountVoteResponseModel.cs" />
    <Compile Include="Models\Response\MovieInfoResponseModel.cs" />
    <Compile Include="Models\Response\MovieListResponseModel.cs" />
    <Compile Include="Models\Response\MovieSearchResponseModel.cs" />
    <Compile Include="Models\Response\PersonInfoResponseModel.cs" />
    <Compile Include="Models\Response\PersonMoviesResponseModel.cs" />
    <Compile Include="Models\Response\PersonSearchResponseModel.cs" />
    <Compile Include="Models\Response\StatsNewResponseModel.cs" />
    <Compile Include="Models\Response\AccountWatchListResponseModel.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Tools\FixJsonListsConverter.cs" />
    <Compile Include="Tools\RemoteHelper.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="CinemateApi.nuspec" />
    <None Include="LICENSE" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>if $(ConfigurationName) == Release nuget pack "$(ProjectPath)" -Prop Configuration=Release -OutputDirectory "$(ProjectDir)\bin\$(ConfigurationName)"</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>